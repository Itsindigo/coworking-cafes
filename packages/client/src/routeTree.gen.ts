/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserSettingsImport } from './routes/user.settings'
import { Route as UserLogoutImport } from './routes/user.logout'
import { Route as UserLoginImport } from './routes/user.login'
import { Route as LocationCreateImport } from './routes/location.create'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const UserSettingsRoute = UserSettingsImport.update({
  path: '/user/settings',
  getParentRoute: () => rootRoute,
} as any)

const UserLogoutRoute = UserLogoutImport.update({
  path: '/user/logout',
  getParentRoute: () => rootRoute,
} as any)

const UserLoginRoute = UserLoginImport.update({
  path: '/user/login',
  getParentRoute: () => rootRoute,
} as any)

const LocationCreateRoute = LocationCreateImport.update({
  path: '/location/create',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/location/create': {
      id: '/location/create'
      path: '/location/create'
      fullPath: '/location/create'
      preLoaderRoute: typeof LocationCreateImport
      parentRoute: typeof rootRoute
    }
    '/user/login': {
      id: '/user/login'
      path: '/user/login'
      fullPath: '/user/login'
      preLoaderRoute: typeof UserLoginImport
      parentRoute: typeof rootRoute
    }
    '/user/logout': {
      id: '/user/logout'
      path: '/user/logout'
      fullPath: '/user/logout'
      preLoaderRoute: typeof UserLogoutImport
      parentRoute: typeof rootRoute
    }
    '/user/settings': {
      id: '/user/settings'
      path: '/user/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof UserSettingsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  LocationCreateRoute,
  UserLoginRoute,
  UserLogoutRoute,
  UserSettingsRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/location/create",
        "/user/login",
        "/user/logout",
        "/user/settings"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/location/create": {
      "filePath": "location.create.tsx"
    },
    "/user/login": {
      "filePath": "user.login.tsx"
    },
    "/user/logout": {
      "filePath": "user.logout.tsx"
    },
    "/user/settings": {
      "filePath": "user.settings.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
